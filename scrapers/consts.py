EFF_TASK_CONVERSION = {}
EFF_TASK_CONVERSION['Detection of Instrumentals musical tracks'] = 'Music Autotagging'
EFF_TASK_CONVERSION['Superhuman mastery of arbitrary abstract strategy games'] = 'Abstract Strategy Games'
EFF_TASK_CONVERSION['Play an arbitrary abstract game, first learning the rules'] = 'Abstract Strategy Games with Rule Learning'
EFF_TASK_CONVERSION['Solve technical problems with clear constraints (proofs, circuit design, aerofoil design, etc)'] = 'Constrained Problem Solving'
EFF_TASK_CONVERSION['Know how to prevent an autonomous AI agent from reproducing itself an unbounded number of times'] = 'Restricted Reproduction'
EFF_TASK_CONVERSION['Transfer of learning within simple arcade game paradigms'] = 'Arcade Game Transfer Learning'
EFF_TASK_CONVERSION['Train machine learning systems on private user data, without transferring sensitive facts into the model'] = 'Privacy Preserving Machine Learning'
EFF_TASK_CONVERSION['Avoiding reward hacking'] = 'Reward Hacking Avoidance'
EFF_TASK_CONVERSION['Drawing pictures'] = 'Image Generation'
EFF_TASK_CONVERSION['Recognise events in videos'] = 'Video Activity Recognition'
EFF_TASK_CONVERSION['Correctly identify when an answer to a classification problem is uncertain'] = 'Classification Under Uncertainty'
EFF_TASK_CONVERSION['Deploy automated defensive security tools to protect valuable systems'] = 'Automated Security'
EFF_TASK_CONVERSION['Scalable supervision of a learning system'] = 'Scalable Supervised Learning'
EFF_TASK_CONVERSION['Pedestrian, bicycle & obstacle detection'] = 'Pedestrian Detection'
EFF_TASK_CONVERSION['Given desired circuit characteristics, and many examples, design new circuits to spec'] = 'Automated Circuit Design'
EFF_TASK_CONVERSION['One shot learning: ingest important truths from a single example'] = 'One-Shot Learning'
EFF_TASK_CONVERSION['Language comprehension and question-answering'] = 'Question Answering'
EFF_TASK_CONVERSION['Given examples of proofs, find correct proofs of simple mathematical theorems'] = 'Mathematical Proofs'
EFF_TASK_CONVERSION['Games that require language comprehension'] = 'Language Games'
EFF_TASK_CONVERSION['Games that require both understanding and speaking a language'] = 'Spoken Language Games'
EFF_TASK_CONVERSION['Learn a several tasks without undermining performance on a first task, avoiding catastrophic forgetting'] = 'Catastrophic Forgetting Avoidance'
EFF_TASK_CONVERSION['Train ML classifiers in a manner that corrects for the impact of omitted-variable bias on certain groups'] = 'Omitted-Variable Bias Correction'
EFF_TASK_CONVERSION['Given an arbitrary technical problem, solve it as well as a typical professional in that field'] = 'Artificial General Intelligence'
EFF_TASK_CONVERSION['Writing software from specifications'] = 'Code Generation'
EFF_TASK_CONVERSION['Translation between human langauges'] = 'Machine Translation'
EFF_TASK_CONVERSION['Fairness in machine learning towards people with a preference for privacy'] = 'Privacy Fairness'
EFF_TASK_CONVERSION['Safe exploration'] = 'Safe Exploration'
EFF_TASK_CONVERSION['Turing test for casual conversation'] = 'Casual Conversation Turing Test'
EFF_TASK_CONVERSION['Write computer programs from specifications'] = 'Code Generation'
EFF_TASK_CONVERSION['Transfer learning: apply relevant knowledge from a prior setting to a new slightly different one'] = 'Transfer Learning'
EFF_TASK_CONVERSION['Play real-time computer & video games'] = 'Video Games'
EFF_TASK_CONVERSION['Extract major numerical results or progress claims from a STEM paper'] = 'Scientific Result Extraction'
EFF_TASK_CONVERSION['Abstract strategy games'] = 'Abstract Strategy Games'
EFF_TASK_CONVERSION['Cooperative inverse reinforcement learning of objective functions'] = 'Objective Function Reinforcement Learning'
EFF_TASK_CONVERSION['Provide mathematical or technical explanations of decisions from classifiers'] = 'Explainable Machine Learning'
EFF_TASK_CONVERSION['Image classification'] = 'Image Classification'
EFF_TASK_CONVERSION['Read a scientific or technical paper, and comprehend its contents'] = 'Scientific Paper Comprehension'
EFF_TASK_CONVERSION['Answering Science Exam Questions'] = 'Scientific Question Answering'
EFF_TASK_CONVERSION['Conduct arbitrary sustained, probing conversation'] = 'Automated Interrogation'
EFF_TASK_CONVERSION['Building systems that solve a wide range of diverse problems, rather than just specific ones'] = 'Artificial General Intelligence'
EFF_TASK_CONVERSION['Modify arbitrary ML systems in order to be able to provide comprehensible human explanations of their decisions'] = 'Explainable Machine Learning'
EFF_TASK_CONVERSION['Learning the rules of complex strategy games from examples'] = 'Strategy Game Rule Learning'
EFF_TASK_CONVERSION['Know how to build general AI agents that will behave as expected'] = 'Predictable Artificial General Intelligence'
EFF_TASK_CONVERSION['Build systems which can recognise and avoid biases decision making'] = 'Bias Avoidance'
EFF_TASK_CONVERSION['Function correctly in novel environments (robustness to distributional change)'] = 'Functional Robustness'
EFF_TASK_CONVERSION['Detect security-related bugs in codebases'] = 'Security Bug Detection'
EFF_TASK_CONVERSION['Simple video games'] = 'Simple Video Games'
EFF_TASK_CONVERSION['Playing abstract games with extensive hints'] = 'Abstract Games with Hints'
EFF_TASK_CONVERSION['Accurate modelling of human language.'] = 'Language Modelling'
EFF_TASK_CONVERSION['Games that require inventing novel language, forms of speech, or communication'] = 'Language Creation Games'
EFF_TASK_CONVERSION['Resistance to adversarial examples'] = 'Adversarial Defense'
EFF_TASK_CONVERSION['Parse and implement complex conditional expressions'] = 'Conditional Expression Parsing'
EFF_TASK_CONVERSION['Image comprehension'] = 'Visual Question Answering'
EFF_TASK_CONVERSION['Be able to generate complex scene e.g. a baboon receiving their degree at convocatoin.'] = 'Complex Conditional Image Generation'
EFF_TASK_CONVERSION['Solve vaguely or under-constrained technical problems'] = 'Underconstrained Problem Solving'
EFF_TASK_CONVERSION['Avoiding undesirable side effects'] = 'Side Effect Mitigation'







